# Introducing MIKE IO

This section introduces `mikeio`, a key Python package from DHI for working with MIKE file formats.

## What is MIKE IO?

[MIKE IO](https://github.com/DHI/mikeio) is a Python library developed by DHI to facilitate reading, writing, and manipulating data from various MIKE file formats, including `dfs0`, `dfs1`, `dfs2`, `dfs3`, `dfsu`, and mesh files. It acts as a bridge between the MIKE software ecosystem and the scientific Python stack, enabling you to programmatically interact with your model data.

::: {.callout-note}
## MIKE IO in the DHI Python Ecosystem
`mikeio` is a foundational package. Other DHI Python packages, like `mikeio1d` (for 1D model results) and `mikepluspy` (for MIKE+ specific interactions), often build upon or complement `mikeio`.
:::

## Why Use MIKE IO for Time Series Data (`dfs0`)?

For this course, and particularly in this module focusing on time series, `mikeio` is essential. It empowers you to:

*   **Read `dfs0` files:** Programmatically access time series data stored in `.dfs0` files. These files are commonly used for meteorological data, boundary conditions, and observed data time series in MIKE+.
*   **Integrate with `pandas`:** Easily convert `dfs0` data into `pandas` DataFrames. This allows you to leverage the powerful analysis and manipulation capabilities you learned about in Module 1.
*   **Write `dfs0` files:** Export processed or newly created time series data from `pandas` DataFrames back into `.dfs0` format, ready for use in MIKE+ or other DHI tools.
*   **Automate workflows:** By scripting these operations, you can automate repetitive tasks involving `dfs0` data, saving significant time and effort while ensuring reproducibility.

## Setting up MIKE IO

You'll install `mikeio` using `uv`, the package manager introduced in Module 1.

::: {.callout-tip}
## Activate Your Environment
Before installing new packages, always ensure your project's virtual environment (created with `uv`) is activated in your terminal. Refer to Module 1 if you need a reminder on how to do this.
:::

1.  **Install `mikeio`:**
    Open your terminal (e.g., PowerShell in VS Code) and ensure your virtual environment is active. Then, run the following command:

    ```powershell
    uv pip install mikeio
    ```

2.  **Verify Installation:**
    You can confirm that `mikeio` has been installed correctly by importing it in a Python script or an interactive session and checking its version. This simple check ensures the package is accessible in your environment.

    ```{python}
    #| output: true
    import mikeio
    print(f"MIKE IO version: {mikeio.__version__}")
    ```

    If the command runs without error and prints a version number, your installation was successful.

## Key MIKE IO Concepts for `dfs0` Files

When working with `dfs0` files (and other DHI formats) using `mikeio`, you'll primarily interact with two types of objects:

*   **`DataArray`**: This object represents a single time series (or a spatial field in other dfs types). It bundles the actual data values with a time axis and important metadata, such as the item name and its specific type (e.g., Rainfall, Water Level).
*   **`Dataset`**: A `Dataset` is essentially a container or a collection of one or more `DataArray` objects. When you read a `dfs0` file, `mikeio` typically organizes the contents into a `Dataset`, where each item in the `dfs0` file becomes a `DataArray` within that `Dataset`.

You'll see these `DataArray` and `Dataset` objects in action as we proceed to read and write `dfs0` files in the upcoming sections. Understanding their roles will help you effectively manage and manipulate your time series data.